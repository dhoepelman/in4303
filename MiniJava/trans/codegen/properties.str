module codegen/properties

imports
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/properties/-
  lib/runtime/types/-
  lib/runtime/editor/-
  milestone1/-
  milestone2/-


signature
  constructors
    NablNsMethod   : Namespace
    NablNsVariable : Namespace
    NablNsField    : Namespace


signature
  constructors
    NablProp_descriptor : Property
    NablProp_descriptor : Property
    NablProp_var-index  : Property


rules

  nabl-custom-properties(add-properties) =
    ![NablProp_descriptor(), NablProp_descriptor(), NablProp_var-index()]
    ; add-properties

  descriptor-is(|task*) =
    nabl-prop-calc(|task*, [])

  descriptor-is(|task*, dep*) =
    nabl-prop-calc(|task*, dep*)

  descriptor-list(|task*) =
    nabl-prop-list(|task*, [])

  descriptor-list(|task*, dep*) =
    nabl-prop-list(|task*, dep*)

  descriptor-lookup(|task*) =
    nabl-prop-lookup(|NablProp_descriptor(), task*, [])

  descriptor-lookup(|task*, dep*) =
    nabl-prop-lookup(|NablProp_descriptor(), task*, dep*)

  descriptor-match(|task*, expected) =
    nabl-prop-match(
    | NablProp_descriptor()
    , task*
    , Eq()
    , expected
    )

  descriptor-match(|task*, relation, expected) =
    nabl-prop-match(|NablProp_descriptor(), task*, relation, expected)

  create-descriptor-task(|task*) =
    fail

  get-descriptor =
    get-property(|NablProp_descriptor())

  store-descriptor(|partition, prop) =
    nabl-store-prop(
    | partition
    , Prop(NablProp_descriptor(), prop, [])
    )

  create-property-task(|partition, kind):
    term -> <create-descriptor-task(|partition)> term
    where NablProp_descriptor() := kind

  descriptor-is(|task*) =
    nabl-prop-calc(|task*, [])

  descriptor-is(|task*, dep*) =
    nabl-prop-calc(|task*, dep*)

  descriptor-list(|task*) =
    nabl-prop-list(|task*, [])

  descriptor-list(|task*, dep*) =
    nabl-prop-list(|task*, dep*)

  descriptor-lookup(|task*) =
    nabl-prop-lookup(|NablProp_descriptor(), task*, [])

  descriptor-lookup(|task*, dep*) =
    nabl-prop-lookup(|NablProp_descriptor(), task*, dep*)

  descriptor-match(|task*, expected) =
    nabl-prop-match(
    | NablProp_descriptor()
    , task*
    , Eq()
    , expected
    )

  descriptor-match(|task*, relation, expected) =
    nabl-prop-match(|NablProp_descriptor(), task*, relation, expected)

  create-descriptor-task(|task*) =
    fail

  get-descriptor =
    get-property(|NablProp_descriptor())

  store-descriptor(|partition, prop) =
    nabl-store-prop(
    | partition
    , Prop(NablProp_descriptor(), prop, [])
    )

  create-property-task(|partition, kind):
    term -> <create-descriptor-task(|partition)> term
    where NablProp_descriptor() := kind

  var-index-is(|task*) =
    nabl-prop-calc(|task*, [])

  var-index-is(|task*, dep*) =
    nabl-prop-calc(|task*, dep*)

  var-index-list(|task*) =
    nabl-prop-list(|task*, [])

  var-index-list(|task*, dep*) =
    nabl-prop-list(|task*, dep*)

  var-index-lookup(|task*) =
    nabl-prop-lookup(|NablProp_var-index(), task*, [])

  var-index-lookup(|task*, dep*) =
    nabl-prop-lookup(|NablProp_var-index(), task*, dep*)

  var-index-match(|task*, expected) =
    nabl-prop-match(
    | NablProp_var-index()
    , task*
    , Eq()
    , expected
    )

  var-index-match(|task*, relation, expected) =
    nabl-prop-match(|NablProp_var-index(), task*, relation, expected)

  create-var-index-task(|task*) =
    fail

  get-var-index =
    get-property(|NablProp_var-index())

  store-var-index(|partition, prop) =
    nabl-store-prop(
    | partition
    , Prop(NablProp_var-index(), prop, [])
    )

  create-property-task(|partition, kind):
    term -> <create-var-index-task(|partition)> term
    where NablProp_var-index() := kind