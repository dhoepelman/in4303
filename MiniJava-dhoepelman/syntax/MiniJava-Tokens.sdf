module MiniJava-Tokens
exports
  lexical syntax
    [0-9]+                  -> INT     
    "true" | "false"        -> BOOLEAN 
    INT | BOOLEAN           -> LITERAL 
    [a-zA-Z] [a-zA-Z0-9\_]* -> ID      
    LITERAL                 -> ID      {reject}
    KEYWORD                 -> ID      {reject}
    "null"                  -> KEYWORD 
    "abstract"              -> KEYWORD 
    "assert"                -> KEYWORD 
    "boolean"               -> KEYWORD 
    "break"                 -> KEYWORD 
    "byte"                  -> KEYWORD 
    "case"                  -> KEYWORD 
    "catch"                 -> KEYWORD 
    "char"                  -> KEYWORD 
    "class"                 -> KEYWORD 
    "const"                 -> KEYWORD 
    "continue"              -> KEYWORD 
    "default"               -> KEYWORD 
    "do"                    -> KEYWORD 
    "double"                -> KEYWORD 
    "else"                  -> KEYWORD 
    "enum"                  -> KEYWORD 
    "extends"               -> KEYWORD 
    "final"                 -> KEYWORD 
    "finally"               -> KEYWORD 
    "float"                 -> KEYWORD 
    "for"                   -> KEYWORD 
    "goto"                  -> KEYWORD 
    "if"                    -> KEYWORD 
    "implements"            -> KEYWORD 
    "import"                -> KEYWORD 
    "instanceof"            -> KEYWORD 
    "int"                   -> KEYWORD 
    "interface"             -> KEYWORD 
    "long"                  -> KEYWORD 
    "native"                -> KEYWORD 
    "new"                   -> KEYWORD 
    "package"               -> KEYWORD 
    "private"               -> KEYWORD 
    "protected"             -> KEYWORD 
    "public"                -> KEYWORD 
    "return"                -> KEYWORD 
    "short"                 -> KEYWORD 
    "static"                -> KEYWORD 
    "strictfp"              -> KEYWORD 
    "super"                 -> KEYWORD 
    "switch"                -> KEYWORD 
    "synchronized"          -> KEYWORD 
    "this"                  -> KEYWORD 
    "throw"                 -> KEYWORD 
    "throws"                -> KEYWORD 
    "transient"             -> KEYWORD 
    "try"                   -> KEYWORD 
    "void"                  -> KEYWORD 
    "volatile"              -> KEYWORD 
    "while"                 -> KEYWORD 

  lexical restrictions
    ID -/- [a-zA-Z0-9\_]
    INT -/- [0-9]