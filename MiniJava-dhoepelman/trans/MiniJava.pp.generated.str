module MiniJava.pp.generated

strategies
  prettyprint-Program :
    Program(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a14]
                       )
                     , H(
                         [SOpt(HS(), "0")]
                       , [b7]
                       )
                     ]
    where a14 := <pp-one-Z(prettyprint-MainClass)> a
    where b7 := <pp-V-list(prettyprint-ClassDecl|"1")> b

  prettyprint-MainClass :
    Main(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("class "), a15, S(" {")]
                       )
                     , b8
                     , c1
                     , a16
                     , H(
                         [SOpt(HS(), "0")]
                       , [S("}")]
                       )
                     ]
    where a15 := <pp-one-Z(prettyprint-ID)> a
    where b8 := <pp-indent(|"2")> [ S("public static void main(String[] ")
                                  , <pp-one-Z(prettyprint-ID)> b
                                  , S(") {")
                                  ]
    where c1 := <pp-indent(|"4")> [<pp-one-Z(prettyprint-Statement)> c]
    where a16 := <pp-indent(|"2")> [S("}")]

  prettyprint-ClassDecl :
    Class(a, b, c) -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("class "), a17, S(" {")]
                        )
                      , b9
                      , c2
                      , H(
                          [SOpt(HS(), "0")]
                        , [S("}")]
                        )
                      ]
    where a17 := <pp-one-Z(prettyprint-ID)> a
    where b9 := <pp-indent(|"2")> [<pp-V-list(prettyprint-FieldDecl)> b]
    where c2 := <pp-indent(|"2")> [<pp-V-list(prettyprint-MethodDecl)> c]

  prettyprint-ClassDecl :
    Class(a, b, c, d) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ S("class ")
                             , a18
                             , S(" extends ")
                             , b10
                             , S(" {")
                             ]
                           )
                         , c3
                         , d0
                         , H(
                             [SOpt(HS(), "0")]
                           , [S("}")]
                           )
                         ]
    where a18 := <pp-one-Z(prettyprint-ID)> a
    where b10 := <pp-one-Z(prettyprint-ID)> b
    where c3 := <pp-indent(|"2")> [<pp-V-list(prettyprint-FieldDecl)> c]
    where d0 := <pp-indent(|"2")> [<pp-V-list(prettyprint-MethodDecl)> d]

  prettyprint-MethodDecl :
    Method(a, b, c, d, e, f) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [ S("public ")
                                    , a19
                                    , S(" ")
                                    , b11
                                    , S("(")
                                    , c4
                                    , S(") {")
                                    ]
                                  )
                                , d1
                                , e0
                                , f0
                                , H(
                                    [SOpt(HS(), "0")]
                                  , [S("}")]
                                  )
                                ]
    where a19 := <pp-one-Z(prettyprint-Type)> a
    where b11 := <pp-one-Z(prettyprint-ID)> b
    where c4 := <pp-H-list(prettyprint-ParameterDecl|", ")> c
    where d1 := <pp-indent(|"2")> [<pp-V-list(prettyprint-VarDecl)> d]
    where e0 := <pp-indent(|"2")> [<pp-V-list(prettyprint-Statement)> e]
    where f0 := <pp-indent(|"2")> [ S("return ")
                                  , <pp-one-Z(prettyprint-Exp)> f
                                  , S(";")
                                  ]

  prettyprint-ParameterDecl :
    Parameter(a, b) -> [ H(
                           [SOpt(HS(), "0")]
                         , [a20, S(" "), b12]
                         )
                       ]
    where a20 := <pp-one-Z(prettyprint-Type)> a
    where b12 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-Statement :
    Block(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("{")]
                  )
                , a21
                , H(
                    [SOpt(HS(), "0")]
                  , [S("}")]
                  )
                ]
    where a21 := <pp-indent(|"2")> [<pp-V-list(prettyprint-Statement)> a]

  prettyprint-Statement :
    IfElse(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ S("if(")
                           , a22
                           , S(") ")
                           , b13
                           ]
                         )
                       , H(
                           [SOpt(HS(), "0")]
                         , [S("else "), c5]
                         )
                       ]
    where a22 := <pp-one-Z(prettyprint-Exp)> a
    where b13 := <pp-one-Z(prettyprint-Statement)> b
    where c5 := <pp-one-Z(prettyprint-Statement)> c

  prettyprint-Statement :
    While(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [ S("while(")
                       , a23
                       , S(") ")
                       , b14
                       ]
                     )
                   ]
    where a23 := <pp-one-Z(prettyprint-Exp)> a
    where b14 := <pp-one-Z(prettyprint-Statement)> b

  prettyprint-Statement :
    Print(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("System.out.println("), a24, S(");")]
                  )
                ]
    where a24 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Statement :
    Assignment(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ a25
                            , S(" = ")
                            , b15
                            , S(";")
                            ]
                          )
                        ]
    where a25 := <pp-one-Z(prettyprint-Assignee)> a
    where b15 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Assignee :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a26]
           )
         ]
    where a26 := <pp-one-Z(prettyprint-VarReference)> a

  prettyprint-Assignee :
    ArrayIndex(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ a27
                            , S("[")
                            , b16
                            , S("]")
                            ]
                          )
                        ]
    where a27 := <pp-one-Z(prettyprint-VarReference)> a
    where b16 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Type :
    Array() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("int[]")]
                 )
               ]

  prettyprint-Type :
    Boolean() -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("boolean")]
                   )
                 ]

  prettyprint-Type :
    Int() -> [ H(
                 [SOpt(HS(), "0")]
               , [S("int")]
               )
             ]

  prettyprint-Type :
    Class(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a28]
                  )
                ]
    where a28 := <pp-one-Z(prettyprint-ClassReference)> a

  prettyprint-FieldDecl :
    Field(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [ a29
                       , S(" ")
                       , b17
                       , S(";")
                       ]
                     )
                   ]
    where a29 := <pp-one-Z(prettyprint-Type)> a
    where b17 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-VarDecl :
    Variable(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ a30
                          , S(" ")
                          , b18
                          , S(";")
                          ]
                        )
                      ]
    where a30 := <pp-one-Z(prettyprint-Type)> a
    where b18 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-VarReference :
    VarReference(a) -> [ H(
                           [SOpt(HS(), "0")]
                         , [a31]
                         )
                       ]
    where a31 := <pp-one-Z(prettyprint-ID)> a

  prettyprint-ClassReference :
    ClassReference(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [a32]
                           )
                         ]
    where a32 := <pp-one-Z(prettyprint-ID)> a

  prettyprint-example =
    prettyprint-Program

  prettyprint-example =
    prettyprint-MainClass

  prettyprint-example =
    prettyprint-ClassDecl

  prettyprint-example =
    prettyprint-MethodDecl

  prettyprint-example =
    prettyprint-ParameterDecl

  prettyprint-example =
    prettyprint-Statement

  prettyprint-example =
    prettyprint-Assignee

  prettyprint-example =
    prettyprint-Type

  prettyprint-example =
    prettyprint-FieldDecl

  prettyprint-example =
    prettyprint-VarDecl

  prettyprint-example =
    prettyprint-VarReference

  prettyprint-example =
    prettyprint-ClassReference